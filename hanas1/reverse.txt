// Reversing of stack

// Online C compiler to run C program online
#include <stdio.h>
#include<string.h>
 char stack[20];
 int top=-1;
 
 void push(char);
 char pop();
 
 void main()
 {
     char str[20],ch;
     int l,i;
     printf("Enter the string:\n");
     gets(str);
     l=strlen(str);
     for(i=0;i<l;i++)
     
         push(str[i]);
     
     printf("Reversed string is:\n");
     for(i=0;i<l;i++)
     {
         ch = pop();
         printf("%c",ch);
     }
 }
 void push(char c)
 {
     top++;
     stack[top]=c;
     
 }
 char pop()
 {
     char c;
     c=stack[top];
     top--;
     return c;
 }
#include <stdio.h>
#include <string.h>

char alphabets[26] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};


void encode(char plaintext[], char encoded_text[], int k)
{
//plaintext: An array that contains the original text
//encoded_text: Store the encoded text in this array
//k: (number) an encoding key to specify 'k' places farther down the alphabet

//TO CODE HERE
int i,j;
for(i=0;i<11;i++)
{
         for(j=0;j<26;j++)
         {
                   if(plaintext[i]==' ')
                   {
                             encoded_text[i] =' ';
                             
                   }
                   else if(alphabets[j]==plaintext[i])
                   {
                             encoded_text[i]  = alphabets[(j+k)%26];
                   }
         }
}
}

void decode(char encoded_text[], char plaintext[], int k)
{
//encoded_text: An array that contains encoded text
//plaintext: An array to store the decoded text
//k: (number) a decoding key

//TO CODE HERE
int i,j;
for (i=0;i<strlen(encoded_text);i++)
{
    for( j=0;j<strlen(alphabets);j++)
    {
        if(encoded_text[i]==' ')
        {
            plaintext[i]=' ';
            
        }
